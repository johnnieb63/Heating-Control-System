// This #include statement was automatically added by the Particle IDE.
#include <MCP9803.h>

// This #include statement was automatically added by the Particle IDE.
//#include <Ubidots.h>



//test comment...


//#define TOKEN "##################################"
//#define DATA_SOURCE_NAME "KH_Monitor"

//Ubidots ubidots(TOKEN);

MCP9803 sensor;


double temperature;
//double temperatureC;
double temph201;
double temph202;
double temph203;

double tempAv;
//double delta; 

double tempFar;
double tempuncorrected;

int dly1;
int dly2;
int dly3;
int dly4;

//int BoilerSWITCH = D6; 

int tog = 1;

void setup() {
    //Serial.begin(115200);
    
    sensor.setAddress(1,1,1);
    Particle.variable("tempC", &tempAv, DOUBLE);
    //Particle.variable("temperatureC", temperatureC);
    //pinMode(BoilerSWITCH, OUTPUT); 
}

void loop() 
{
    if (dly1 <= millis() && tog == 1)
        {
            temperature = sensor.temperature();
            tempuncorrected = (temperature - 32) * 0.555556;
            tempFar = temperature;
            temph201 = ((temperature - 32) * 0.555556); //* 0.895;
            
            //Particle.publish("BtempC1", String(temph201,2),PRIVATE);
            tog = 2;
            dly2 = millis() + 2000;
            //tempAv1 = (temph201 + temph202 + temph203)/3;
        }
        
    if (dly2 <= millis() && tog == 2)
        {
            temperature = sensor.temperature();
            tempuncorrected = (temperature - 32) * 0.555556;
            tempFar = temperature;
            temph202 = ((temperature - 32) * 0.555556); //* 0.895;
            
            //Particle.publish("-tempC2", String(temph202,2),PRIVATE);
            tog = 3;
            dly3 = millis() + 2000;
            //tempAv2 = (temph201 + temph202 + temph203)/3;
        }
        
    if (dly3 <= millis() && tog == 3)
        {
            temperature = sensor.temperature();
            tempuncorrected = (temperature - 32) * 0.555556;
            tempFar = temperature;
            temph203 = ((temperature - 32) * 0.555556); //* 0.895;
            
            //Particle.publish("-tempC3", String(temph203,2),PRIVATE);
            tog = 4;
            dly4 = millis() + 2000;
            //tempAv3 = (temph201 + temph202 + temph203)/3;
        }
        
    if (dly4 <= millis() && tog == 4)
        {
            tempAv = (temph201 + temph202 + temph203)/3;
            Particle.publish("tempC", String(tempAv,2),PRIVATE);
            
            //delta = (temph203 - temph201);
            //Particle.publish("tempAcc", String(delta,2),PRIVATE);
           
            tog = 1;
            dly1 = millis() + 6000;
        }
}

